<?xml version="1.0" encoding="UTF-8"?>
<!--
  DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
  DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
  
   Refer to the below DTD Instead:
  
  <!DOCTYPE form-validation PUBLIC
        "-//Apache Software Foundation//DTD Commons Validator Rules Configuration 1.0//EN"
        "http://jakarta.apache.org/commons/dtds/validator_1_0.dtd">
  
  
  $Id: validator-rules_1_1.dtd,v 1.6 2002/11/14 20:33:13 rleland Exp $
-->
<!-- =================================================== Top Level Elements -->
<!--
  DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
  DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
   The "form-validation" element is the root of the configuration file
   hierarchy, and contains nested elements for all of the other
   configuration settings.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="form-validation">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="global"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
    The elements defined here are all global and must be nested within a
    "global" element.
  -->
  <xs:element name="global">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="validator"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "validator" element defines what validators objects can be used with
     the fields referenced by the formset elements. The validator element can
     accept 4 properties: name, classname, method, methodparams, msg, depends,
     and jsFunctionName.
  -->
  <xs:element name="validator">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="javascript"/>
      </xs:sequence>
      <xs:attribute name="name" use="required"/>
      <xs:attribute name="classname" use="required"/>
      <xs:attribute name="method" use="required"/>
      <xs:attribute name="methodParams" use="required"/>
      <xs:attribute name="msg" use="required"/>
      <xs:attribute name="depends"/>
      <xs:attribute name="jsFunctionName"/>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "javascript" element defines a JavaScript that can be used to perform
     client-side validators.
  -->
  <xs:element name="javascript" type="xs:string"/>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "constant" element defines a static value that can be used as
     replacement parameters within "field" elements. The "constant-name" and
     "constant-value" elements define the constant's reference id and replacement
     value.
  -->
  <xs:element name="constant">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="constant-name"/>
        <xs:element ref="constant-value"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="constant-name" type="xs:string"/>
  <xs:element name="constant-value" type="xs:string"/>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
      The "formset" element defines a set of forms for a locale. Formsets for
      specific locales can override only those fields that change. The
      localization is properly scoped, so that a formset can override just the
      language, or just the country, or both.
  -->
  <xs:element name="formset">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="constant"/>
        <xs:element maxOccurs="unbounded" ref="form"/>
      </xs:sequence>
      <xs:attribute name="language"/>
      <xs:attribute name="country"/>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "form" element defines a set of fields to be validated. The name
     corresponds to the identifer the application assigns to the form. In the
     case of the Struts framework, this is the attribute property from
     the ActionMapping. Struts also offers the alternative of using the
     the path property as the Validator form name.
  -->
  <xs:element name="form">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="field"/>
      </xs:sequence>
      <xs:attribute name="name" use="required"/>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "field" element defines the properties to be validated. In a
     web application, a field would also correspond to a control on
     a HTML form. To validate the properties, the validator works through
     a JavaBean representation, like a Struts ActionForm. The field element
     can accept up to 4 attributes:
    
     property        The property on the JavaBean corresponding to this
                     field element.
    
     depends         The comma-delimited list of validators to apply against
                     this field. For the field to succeed, all the
                     validators must succeed.
    
     page            The JavaBean corresponding to this form may include
                     a page property. Only fields with a "page" attribute
                     value that is equal to or less than the page property
                     on the form JavaBean are processed. This is useful when
                     using a "wizard" approach to completing a large form,
                     to ensure that a page is not skipped.
                     [0]
    
     indexedListProperty
                     The "indexedListProperty" is the method name that will
                     return an array or a Collection used to retrieve the
                     list and then loop through the list performing the
                     validations for this field.
    
     fieldOrder      [:FIXME: is this still supported?]
  -->
  <xs:element name="field">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="msg"/>
        <xs:element ref="arg0"/>
        <xs:element ref="arg1"/>
        <xs:element ref="arg2"/>
        <xs:element ref="arg3"/>
        <xs:element ref="var"/>
      </xs:choice>
      <xs:attribute name="property" use="required"/>
      <xs:attribute name="depends"/>
      <xs:attribute name="page"/>
      <xs:attribute name="indexedListProperty"/>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "msg" element defines a custom message key to use when one of the
     validators for this field fails. Each validator has a default message
     property that is used when a corresonding field msg is not specified.
     Each validator applied to a field may have its own msg element.
     The msg element accepts up to three attributes.
    
      name        The name of the validator corresponding to this msg.
    
      key         The key that will return the message template from a
                  resource bundle.
    
      resource    If set to "false", the key is taken to be a literal
                  value rather than a bundle key.
                  [true]
  -->
  <xs:element name="msg">
    <xs:complexType>
      <xs:attribute name="name"/>
      <xs:attribute name="key"/>
      <xs:attribute name="resource"/>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "arg0" element defines the first replacement value to use with the
     message template for this validator or this field.
     The arg0 element accepts up to three attributes.
    
      name        The name of the validator corresponding to this msg.
    
      key         The key that will return the message template from a
                  resource bundle.
    
      resource    If set to "false", the key is taken to be a literal
                  value rather than a bundle key.
                  [true]
  -->
  <xs:element name="arg0">
    <xs:complexType>
      <xs:attribute name="name"/>
      <xs:attribute name="key"/>
      <xs:attribute name="resource"/>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "arg1" element defines the second replacement value to use with the
     message template for this validator or this field.
     The arg1 element accepts up to three attributes.
    
      name        The name of the validator corresponding to this msg.
    
      key         The key that will return the message template from a
                  resource bundle.
    
      resource    If set to "false", the key is taken to be a literal
                  value rather than a bundle key.
                  [true]
  -->
  <xs:element name="arg1">
    <xs:complexType>
      <xs:attribute name="name"/>
      <xs:attribute name="key"/>
      <xs:attribute name="resource"/>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "arg2" element defines the third replacement value to use with the
     message template for this validator or this field.
     The arg2 element accepts up to three attributes.
    
      name        The name of the validator corresponding to this msg.
    
      key         The key that will return the message template from a
                  resource bundle.
    
      resource    If set to "false", the key is taken to be a literal
                  value rather than a bundle key.
                  [true]
  -->
  <xs:element name="arg2">
    <xs:complexType>
      <xs:attribute name="name"/>
      <xs:attribute name="key"/>
      <xs:attribute name="resource"/>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "arg3" element defines the fourth replacement value to use with the
     message template for this validator or this field.
     The arg0 element accepts up to three attributes.
    
      name        The name of the validator corresponding to this msg.
    
      key         The key that will return the message template from a
                  resource bundle.
    
      resource    If set to "false", the key is taken to be a literal
                  value rather than a bundle key.
                  [true]
  -->
  <xs:element name="arg3">
    <xs:complexType>
      <xs:attribute name="name"/>
      <xs:attribute name="key"/>
      <xs:attribute name="resource"/>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The "var" element can set parameters that a field may need to pass to
     one of its validators, such as the minimum and maximum values in a
     range validation. These parameters may also be referenced by one of the
     arg? elements using a shell syntax: ${var:var-name}.
  -->
  <xs:element name="var">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="var-name"/>
        <xs:element ref="var-value"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The name of the var parameter to provide to a field's validators.
  -->
  <xs:element name="var-name" type="xs:string"/>
  <!--
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED
    DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED ** DEPRECATED 
     The value of the var parameter to provide to a field's validators.
  -->
  <xs:element name="var-value" type="xs:string"/>
</xs:schema>
<!-- eof -->
